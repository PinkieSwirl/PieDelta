public final class eu/pieland/delta/DeltaCreator {
	public fun <init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;II)V
	public synthetic fun <init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;IIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun create ()Ljava/nio/file/Path;
}

public abstract interface class eu/pieland/delta/DeltaCreatorMap {
	public abstract fun getOrDefault (JI)I
	public abstract fun putIfAbsent (JI)V
}

public final class eu/pieland/delta/DeltaPatcher {
	public fun <init> (Ljava/util/zip/ZipInputStream;Ljava/nio/file/Path;)V
	public final fun patch ()Ljava/nio/file/Path;
}

public abstract class eu/pieland/delta/HashAlgorithm : java/lang/Enum {
	public static final field CRC32 Leu/pieland/delta/HashAlgorithm;
	public static final field SHA_1 Leu/pieland/delta/HashAlgorithm;
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public abstract fun computeHash (Ljava/nio/file/Path;)Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	protected final fun useAll (Ljava/io/InputStream;ILkotlin/jvm/functions/Function3;)V
	public static synthetic fun useAll$default (Leu/pieland/delta/HashAlgorithm;Ljava/io/InputStream;ILkotlin/jvm/functions/Function3;ILjava/lang/Object;)V
	public static fun valueOf (Ljava/lang/String;)Leu/pieland/delta/HashAlgorithm;
	public static fun values ()[Leu/pieland/delta/HashAlgorithm;
}

